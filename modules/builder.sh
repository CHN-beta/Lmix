source $stdenv/setup

shopt -s nullglob

modfile="$out/modules/$modName"
mkdir -p `dirname "$modfile"`

cat > $modfile << EOF
-- $modName
-- autogenerated by nix-with-modules

local pkgName = myModuleName()
local version = myModuleVersion()

EOF

modPrependPath () {
  echo -e "prepend_path(\"$1\", \"$2\")" >> $modfile
}

modSetEnv () {
  echo -e "setenv(\"$1\", \"$2\")" >> $modfile
}

addPaths () {
  # PATH
  if [[ -d $1/bin ]] ; then
    modPrependPath "PATH" "$1/bin"
  fi
  # MANPATH
  if [[ -d $1/share/man ]] ; then
    modPrependPath MANPATH "$1/share/man"
  fi
  # PKG_CONFIG_PATH
  if [[ -d $1/lib/pkgconfig ]] ; then
    modPrependPath "PKG_CONFIG_PATH" "$1/lib/pkgconfig"
  fi
  if [[ -d $1/share/pkgconfig ]] ; then
    modPrependPath "PKG_CONFIG_PATH" "$1/share/pkgconfig"
  fi
  # CMAKE_SYSTEM_PREFIX_PATH
  if [[ -d $1/lib/cmake ]] ; then
    modPrependPath "CMAKE_SYSTEM_PREFIX_PATH" "$1/lib/cmake"
  fi
  # PERL5LIB
  if [[ -d $1/lib/perl5/site_perl ]] ; then
    modPrependPath "PERL5LIB" "$1/lib/perl5/site_perl"
  fi
  # LD_LIBRARY_PATH
  libs=($1/lib/lib*.so)
  if [[ $addLDLibPath && -n $libs ]] ; then
    modPrependPath "LD_LIBRARY_PATH" "$1/lib"
  fi
}

addPkgVariables () {
  # PAC_BASE - base nix store path
  modSetEnv "${pacName}_BASE" "${PAC_BASE}"
  if [[ -n "$PAC_BIN" ]] ; then
    # PAC_BIN - bin directory
    modSetEnv "${pacName}_BIN" "${PAC_BIN}"
  fi
  # PAC_LIBDIR - library directory
  if [[ -n "$PAC_LIBDIR" ]] ; then
    modSetEnv "${pacName}_LIBDIR" "${PAC_LIBDIR}"
    # PAC_LIB - setting for static linking
    if [[ -n "$PAC_LIB" ]] ; then
      modSetEnv "${pacName}_LIB" "${PAC_LIB}"
    fi
    # PAC_SHLIB - setting for dynamic linking
    if [[ -n "$PAC_SHLIB" ]] ; then
      modSetEnv "${pacName}_SHLIB" "${PAC_SHLIB}"
    fi
  fi
  # PAC_INC - include directory
  if [[ -n "$PAC_INC" ]] ; then
    modSetEnv "${pacName}_INC" "${PAC_INC}"
  fi
  # extra variables e.g. PAC_DOC, PAC_MPI_LIB, PAC_WWW don't have default value
  for vv in $extraPkgVariables ; do
    modSetEnv "${pacName}_${vv%%=*}" "${vv#*=}"
  done
}

for i in $buildInputs;
do
  addPaths $i
done

echo >> $modfile

addPkgVariables

echo >> $modfile

for vv in $extraEnvVariables ; do
  modSetEnv "${vv%%=*}" "${vv#*=}"
done
