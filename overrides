#!/usr/bin/bash
# set -x

printhelp () {
  echo "Autogenerate package overrides."
  echo "Usage: ./overrides <package-name> <version>"
}

geturl () {
  if ! url=$(nix eval --impure --expr "let version=\"$2\"; in with (import <nixpkgs/lib>).versions; \"$1\"" 2>/dev/null); then
    exit 1
  else 
    echo ${url//\"/}
  fi
}

getsha256 () {
  if ! sha256=$(nix-prefetch-url $1 2>/dev/null); then
    exit 1
  else
    echo "$sha256"
  fi
}

printoverride () { # pname, version, url, sha256
  cat << EOF
  $1_${2//'.'/'_'} = $1.overrideAttrs(old: rec {
    version = "$2";
    src = prev.fetchurl {
      url = "$3";
      sha256 = "$4";
    };
  });
EOF
}

if [[ $# != 2 ]]; then
  printhelp
  exit 1
fi;

pname=$1
version=$2

declare -A urls_dict

overlayfile=./overlay.nix
while read line;
do
  if [[ $line = "##"* ]]; then
    read -a ls <<< "$line"
    urls_dict["${ls[1]}"]="${ls[@]:3}"
  fi
done < $overlayfile


if [[ -z "${urls_dict[$pname]+1}" ]]; then
  echo "error: package does not exist: $pname"
  exit 1
fi

interp_url=${urls_dict[$pname]}


if ! url=$(geturl "$interp_url" "$version"); then
  echo "error: version format is not valid: $version"
  exit 1
fi
if ! sha256=$(getsha256 $url); then
  echo "error: version does not exist: $version"
  exit 1
fi

printoverride $pname $version "$interp_url" $sha256
